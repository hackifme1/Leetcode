// By Chandramani Kumar
// Keep moving and must be simple bro!!!!!
// EspÃ©rons le meilleur mais prÃ©parez-vous au pire ðŸ˜Ž


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        vector<int> v;
        
        if(root==NULL)
        {
            return ans;
        }
        
        queue<pair<TreeNode*,int>> q;
        
        q.push(make_pair(root,0));
        int l=0;
        // v.push_back(root->val);
        // ans.push_back(v);
        // v.clear();
        while(!q.empty())
        {
            pair<TreeNode*,int> tp=q.front();
            q.pop();
            if(tp.first!=NULL&&tp.second==l)
            {
                v.push_back(tp.first->val);
            }
            else
            {
                if(tp.first!=NULL)
                {
                    l=tp.second;
                    ans.push_back(v);
                    
                    v.clear();
                    
                    v.push_back(tp.first->val);
                    
                }
            }
            
            TreeNode* node=tp.first;
            if(node!=NULL)
            {
                if(node->left!=NULL)
                {
                    q.push(make_pair(node->left,tp.second+1));
                }
                if(node->right!=NULL)
                q.push(make_pair(node->right,tp.second+1));
            }
            
        }
        ans.push_back(v);
        v.clear();
        return ans;
        
    }
};
